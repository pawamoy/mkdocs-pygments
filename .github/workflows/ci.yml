name: ci

on:
  push:
  pull_request:
    branches:
    - main

defaults:
  run:
    shell: bash

env:
  LANG: en_US.utf-8
  LC_ALL: en_US.utf-8
  PYTHONIOENCODING: UTF-8
  PYTHON_VERSIONS: ""

jobs:

  quality:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Fetch all tags
      run: git fetch --depth=1 --tags

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      run: pip install uv

    - name: Install dependencies
      run: make setup

    - name: Check if the documentation builds correctly
      run: make check-docs

    - name: Check the code quality
      run: make check-quality

    - name: Check if the code is correctly typed
      run: make check-types

    - name: Check for vulnerabilities in dependencies
      run: make check-dependencies

    - name: Check for breaking changes in the API
      run: make check-api

  exclude-test-jobs:
    runs-on: ubuntu-latest
    outputs:
      jobs: ${{ steps.exclude-jobs.outputs.jobs }}
    steps:
    - id: exclude-jobs
      run: |
        if ${{ github.repository_owner == 'pawamoy-insiders' }}; then
          echo 'jobs=[
            {"os": "macos-latest"},
            {"os": "windows-latest"},
            {"python-version": "3.9"},
            {"python-version": "3.10"},
            {"python-version": "3.11"},
            {"python-version": "3.12"},
            {"python-version": "3.13"}
          ]' | tr -d '[:space:]' >> $GITHUB_OUTPUT
        else
          echo 'jobs=[
            {"os": "macos-latest", "resolution": "lowest-direct"},
            {"os": "windows-latest", "resolution": "lowest-direct"}
          ]' | tr -d '[:space:]' >> $GITHUB_OUTPUT
        fi

  tests:

    needs: exclude-test-jobs
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
        resolution:
        - highest
        - lowest-direct
        exclude: ${{ fromJSON(needs.exclude-test-jobs.outputs.jobs) }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.python-version == '3.13' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Install uv
      run: pip install uv

    - name: Install dependencies
      env:
        UV_RESOLUTION: ${{ matrix.resolution }}
      run: make setup

    - name: Run the test suite
      run: make test
